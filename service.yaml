openapi: 3.0.3
info:
  title: Route search service - OpenAPI 3.0
  description: |-
    Scala backend homework, Mukhametgalin Artur
  version: "1.0"
externalDocs:
  url: https://edu.tinkoff.ru/my-activities/courses/stream/80378e3d-aa9d-47c1-8af1-d6115e989712/exam/8107/1
  description: problem statement
servers:
  - url: https://example.com

paths:
  /auth/register:
    post:
      description: Create user by username and password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_auth_data'
        required: true
      responses:
        '200':
          description: Successful registration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authtoken'
        '400': 
          description: Username or password is not valid
        '409':
          description: Username is taken
        '500':
          description: Internal server error
  /auth/login:
    post:
      description: Log in by username and password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_auth_data'
        required: true
      responses:
        '200':
          description: Successful authorization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authtoken'
        '400': 
          description: The password is not correct
        '409':
          description: User does not exist
        '500':
          description: Internal server error
  /route:
    post:
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_points'
        required: true
      responses:
        '200':
          description: Route is found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/route'
        '401': 
          description: Unauthorized
        '409':
          description: Request points is not correct
        '500':
          description: Internal server error
        
      




components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    user_auth_data:
      required:
        - username
        - password
      type: object
      properties:
        username:
          type: string
          example: i_am_user_1
        password:
          type: string
          example: password1
        repeated_password:
          type: string
          example: password2

    point_id:
      type: integer
      example: 12345
    
    point:
      required:
        - id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/point_id'
        payload:
          type: string
          description: additional information of point
          example: Some info about point
    
    user_points:
      required:
        - ids
      type: object
      properties:
        ids:
          type: array
          items:
            $ref: '#/components/schemas/point_id'

    route:
      required:
        - points
      type: object
      properties:
        points: 
          type: array
          items:
            $ref: '#/components/schemas/point'
        
    authtoken:
      required:
        - token
      type: object
      properties:
        token:
          type: string
          example: i_am_token
    