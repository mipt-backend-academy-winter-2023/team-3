version: "3.9"

services:
  auth-database:
    image: postgres:15-alpine
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${AUTH_POSTGRES_USER}
      - POSTGRES_PASSWORD=${AUTH_POSTGRES_PASSWORD}
      - POSTGRES_DB=${AUTH_POSTGRES_DB}
    ports:
      - "${AUTH_POSTGRES_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-service:
    build:
      context: .
      dockerfile: ./auth/Dockerfile
    env_file:
      - .env
    environment:
      - AUTH_POSTGRES_HOST=auth-database
      - AUTH_POSTGRES_PORT=5432
    ports:
      - "${AUTH_HTTP_PORT}:${AUTH_HTTP_PORT}"
    depends_on:
      auth-database:
        condition: service_healthy

  routing-database:
    image: postgres:15-alpine
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${ROUTING_POSTGRES_USER}
      - POSTGRES_PASSWORD=${ROUTING_POSTGRES_PASSWORD}
      - POSTGRES_DB=${ROUTING_POSTGRES_DB}
    ports:
      - "${ROUTING_POSTGRES_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  routing-service:
    build:
      context: .
      dockerfile: ./routing/Dockerfile
    env_file:
      - .env
    environment:
      - ROUTING_POSTGRES_HOST=routing-database
      - ROUTING_POSTGRES_PORT=5432
    ports:
      - "${ROUTING_HTTP_PORT}:${ROUTING_HTTP_PORT}"
    depends_on:
      routing-database:
        condition: service_healthy
